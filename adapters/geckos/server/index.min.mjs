import e,{iceServers as r}from"@geckos.io/server";import{$Client as h,$Server as c}from"../../../src/adapters.js";class u extends h{#t;constructor(t){super(t.id),this.#t=t}emit(t,...i){this.#t.emit(t,...i)}on(t,i){this.#t.on(t,n=>{try{i(this,n)}catch(s){console.log(s)}})}onDisconnect(t){try{this.#t.onDisconnect(t)}catch(i){console.log(i)}}}class p extends c{#t;#o;#i;constructor(t={port:9208}){super();let{port:i}=t;this.isRunning=!1,this.#o=i,this.#i={iceServers:r}}client(t){return new u(t)}emit(t="",...i){this.isRunning&&this.#t.emit(t,i)}listen(){this.#t=e(this.#i),this.#t.listen(this.#o),this.#t.onConnection(t=>{this.connect(this.client(t))}),this.isRunning=!0}onSetup(){this.setAuthorization(this.authorization)}setAuthorization(t){if(typeof t=="function")this.#i.cors={allowAuthorization:!0},this.#i.authorization=t;else throw new Error("authorization is not a function.")}}export{p as Server};
